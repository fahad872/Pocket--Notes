[{"D:\\React js\\Pocket Notes\\src\\index.js":"1","D:\\React js\\Pocket Notes\\src\\App.js":"2","D:\\React js\\Pocket Notes\\src\\reportWebVitals.js":"3","D:\\React js\\Pocket Notes\\src\\Pages\\Homepage.jsx":"4","D:\\React js\\Pocket Notes\\src\\Components\\Sidebar\\Sidebar.jsx":"5","D:\\React js\\Pocket Notes\\src\\Components\\NotesWindow\\NotesWindow.jsx":"6","D:\\React js\\Pocket Notes\\src\\Components\\NotesWindow\\DefaultWindow.jsx":"7","D:\\React js\\Pocket Notes\\src\\Components\\Popup\\Popup.jsx":"8","D:\\React js\\Pocket Notes\\src\\Components\\Overlay\\Overlay.jsx":"9","D:\\React js\\Pocket Notes\\src\\Components\\Sidebar\\NoteGroups.jsx":"10","D:\\React js\\Pocket Notes\\src\\Components\\NotesWindow\\NoteList.jsx":"11","D:\\React js\\Pocket Notes\\src\\Utils\\constants.jsx":"12"},{"size":324,"mtime":1699514257916,"results":"13","hashOfConfig":"14"},{"size":152,"mtime":1699257511000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1699257511000,"results":"16","hashOfConfig":"14"},{"size":1886,"mtime":1699257511000,"results":"17","hashOfConfig":"14"},{"size":828,"mtime":1699257511000,"results":"18","hashOfConfig":"14"},{"size":2886,"mtime":1699257511000,"results":"19","hashOfConfig":"14"},{"size":800,"mtime":1699467502420,"results":"20","hashOfConfig":"14"},{"size":1870,"mtime":1699257511000,"results":"21","hashOfConfig":"14"},{"size":289,"mtime":1699257511000,"results":"22","hashOfConfig":"14"},{"size":629,"mtime":1699257511000,"results":"23","hashOfConfig":"14"},{"size":384,"mtime":1699257511000,"results":"24","hashOfConfig":"14"},{"size":200,"mtime":1699257511000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d67y66",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React js\\Pocket Notes\\src\\index.js",[],[],"D:\\React js\\Pocket Notes\\src\\App.js",[],[],"D:\\React js\\Pocket Notes\\src\\reportWebVitals.js",[],[],"D:\\React js\\Pocket Notes\\src\\Pages\\Homepage.jsx",[],[],"D:\\React js\\Pocket Notes\\src\\Components\\Sidebar\\Sidebar.jsx",[],[],"D:\\React js\\Pocket Notes\\src\\Components\\NotesWindow\\NotesWindow.jsx",["63","64"],[],"import React, { useRef, useState } from 'react'\nimport Styles from \"./noteswindow.module.css\"\nimport ButtonImage from \"../../Utils/assests/text-area-button.svg\"\nimport NoteList from './NoteList'\nconst NotesWindow = ({list,setList,selected}) => {\n  const [newContent, setNewContent] = useState();\n  const buttonRef = useRef(null);\n  const getCurrentDate =()=>{\n    const getDate = new Date();\n    const options = {\n      year: 'numeric',\n      day: 'numeric',\n      month: 'long',\n    };\n    const formattedDate = getDate.toLocaleString('en-IN', options);\n    return formattedDate;\n  }\n  const getCurrentTime = ()=>{\n    const getTime = new Date();\n    const options = {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n    };\n    const currentTime = getTime.toLocaleString('en-IN', options);\n    const formattedTime = currentTime.replace(/am|pm/gi, match => match.toUpperCase());\n    return formattedTime;\n  }  \n  const handleKeyDown=(e)=>{\n    if(e.key ==='Enter'){\n      e.preventDefault();\n      buttonRef.current.click();\n    }\n  }\n  var selectedNote = \"\";\n  if (selected > -1) {\n    selectedNote = list.filter((item) => item.id == selected);\n    selectedNote = selectedNote[0].notes;\n  }\n\n  const handleClick=()=>{\n    const listItem = list.find((item) => item.id == selected);\n    getCurrentDate();\n    getCurrentTime();\n    if(listItem){\n      const newNote ={\n        id : listItem.notes.length+1,\n        content : newContent,\n        date:getCurrentDate(),\n        time:getCurrentTime()\n      };\n      listItem.notes = [...listItem.notes,newNote];\n      const updatedList = [...list];\n      setList(updatedList);\n      localStorage.setItem(\"pocket_notes\",JSON.stringify(updatedList));\n      setNewContent(\"\");\n    }\n  }\n  return (\n    <div className={Styles.window}>\n        <div className={Styles.title_bar}>\n          <div className={Styles.group_icon} style={{backgroundColor:list[selected].color}}>\n            {list[selected].abbreviation}\n          </div>\n          <div className={Styles.group_title}>\n            {list[selected].title}\n          </div>\n        </div>\n        <div className={Styles.notes_date_time_content}>\n          {selected > -1 ? \n          selectedNote.map((item)=><NoteList list={list} item={item} key={item.id}/>) : \"\"}\n        </div>\n        <div className={Styles.text_area_container}>\n          <textarea className={Styles.text_area} \n          placeholder='Enter your text here...........'\n          value={newContent}\n          onChange={(e)=>setNewContent(e.target.value)}\n          onKeyDown={handleKeyDown}\n          />\n          <div className={Styles.text_area_button_img}>\n          <img src={ButtonImage} className={Styles.text_area_button_img} \n          alt='Enter-Button' onClick={handleClick}\n          ref={buttonRef}\n          />\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default NotesWindow","D:\\React js\\Pocket Notes\\src\\Components\\NotesWindow\\DefaultWindow.jsx",[],[],"D:\\React js\\Pocket Notes\\src\\Components\\Popup\\Popup.jsx",[],[],"D:\\React js\\Pocket Notes\\src\\Components\\Overlay\\Overlay.jsx",[],[],"D:\\React js\\Pocket Notes\\src\\Components\\Sidebar\\NoteGroups.jsx",[],[],"D:\\React js\\Pocket Notes\\src\\Components\\NotesWindow\\NoteList.jsx",[],[],"D:\\React js\\Pocket Notes\\src\\Utils\\constants.jsx",[],[],{"ruleId":"65","severity":1,"message":"66","line":37,"column":50,"nodeType":"67","messageId":"68","endLine":37,"endColumn":52},{"ruleId":"65","severity":1,"message":"66","line":42,"column":50,"nodeType":"67","messageId":"68","endLine":42,"endColumn":52},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]