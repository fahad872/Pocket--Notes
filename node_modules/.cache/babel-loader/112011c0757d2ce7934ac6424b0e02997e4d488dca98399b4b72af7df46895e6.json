{"ast":null,"code":"var _jsxFileName = \"D:\\\\React js\\\\Pocket Notes\\\\src\\\\Components\\\\Popup\\\\Popup.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Styles from \"./popup.module.css\";\nimport { COLOR_CHOICES } from '../../Utils/constants';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = ({\n  list,\n  setList,\n  setDisplayPopup\n}) => {\n  _s();\n  const [selectedColor, setSelectedColor] = useState(-1);\n  const [groupName, setGroupName] = useState(\"\");\n  const handleClick = () => {\n    if (selectedColor === -1 || groupName === \"\") {\n      return;\n    }\n    const lastNoteId = list.length - 1;\n    const groupAbreviation = groupName.split(' ').map(word => word[0].toUpperCase()).join('');\n    const newGroup = {\n      id: lastNoteId + 1,\n      title: groupName,\n      color: COLOR_CHOICES[selectedColor].color,\n      abbreviation: groupAbreviation,\n      notes: []\n    };\n    const updatedList = [...list, newGroup];\n    setList(updatedList);\n    localStorage.setItem(\"pocket_notes\", JSON.stringify(updatedList));\n    setGroupName(\"\");\n    setDisplayPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.popup,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.heading,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create New Notes Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.name,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.subHeading,\n        children: \"Group Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your group name...\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.choices,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.subHeading,\n        children: \"Choose Colour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), COLOR_CHOICES.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.colorDiv,\n        style: {\n          backgroundColor: item.color,\n          border: selectedColor === idx ? \"4px solid black\" : \"4px solid\" + item.color\n        },\n        onClick: () => setSelectedColor(idx)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: Styles.createBtn,\n      onClick: handleClick,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Popup, \"0D/vdERBJXP+/+y2J6R8sVGQj5U=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","Styles","COLOR_CHOICES","useState","jsxDEV","_jsxDEV","Popup","list","setList","setDisplayPopup","_s","selectedColor","setSelectedColor","groupName","setGroupName","handleClick","lastNoteId","length","groupAbreviation","split","map","word","toUpperCase","join","newGroup","id","title","color","abbreviation","notes","updatedList","localStorage","setItem","JSON","stringify","className","popup","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","name","subHeading","type","placeholder","value","onChange","e","target","choices","item","idx","colorDiv","style","backgroundColor","border","onClick","createBtn","_c","$RefreshReg$"],"sources":["D:/React js/Pocket Notes/src/Components/Popup/Popup.jsx"],"sourcesContent":["import React from 'react'\nimport Styles from \"./popup.module.css\";\nimport { COLOR_CHOICES } from '../../Utils/constants';\nimport { useState } from 'react';\nconst Popup = ({list,setList,setDisplayPopup}) => { \n    const [selectedColor,setSelectedColor] = useState(-1);\n    const [groupName,setGroupName] = useState(\"\");\n    const handleClick = ()=>{\n      if(selectedColor === -1 || groupName === \"\"){\n        return;\n      }\n      const lastNoteId = list.length-1;\n      const groupAbreviation = groupName.split(' ').map(word => word[0].toUpperCase()).join('');\n      const newGroup = {\n        id: lastNoteId + 1,\n        title: groupName,\n        color: COLOR_CHOICES[selectedColor].color,\n        abbreviation: groupAbreviation,\n        notes: []\n      };\n      const updatedList = [...list,newGroup];\n      setList(updatedList);\n      localStorage.setItem(\"pocket_notes\",JSON.stringify(updatedList));\n      setGroupName(\"\");\n      setDisplayPopup(false);\n    }\n  return (\n    <div className={Styles.popup}>\n      <div className={Styles.heading}><h1>Create New Notes Group</h1></div>\n      <div className={Styles.name}>\n        <div className={Styles.subHeading}>Group Name</div>\n        <input type='text' placeholder='Enter your group name...'\n        value={groupName} onChange={(e)=>setGroupName(e.target.value)}\n        />\n      </div>\n      <div className={Styles.choices}>\n        <div className={Styles.subHeading}>Choose Colour</div>\n        {COLOR_CHOICES.map((item,idx)=>\n        <div className={Styles.colorDiv} \n        style={{backgroundColor:item.color,\n        border: selectedColor === idx ? \"4px solid black\":\"4px solid\"+item.color}}\n        key={idx} onClick={()=>setSelectedColor(idx)}/>\n        )}\n      </div>\n      <button className={Styles.createBtn} onClick={handleClick}>\n        Create\n      </button>\n    </div>\n  )\n}\n\nexport default Popup"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}